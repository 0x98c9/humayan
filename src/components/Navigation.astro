---
import { Menu, X } from 'lucide-astro';
---

<nav class="fixed top-0 left-0 right-0 z-50 bg-slate-900/80 backdrop-blur-md border-b border-slate-800">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-14 sm:h-16">
      <!-- Logo/Brand -->
      <a href="/" class="text-lg sm:text-xl font-bold text-white hover:text-blue-400 transition-colors">
        Humayan
      </a>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-6 lg:space-x-8">
        <a href="#about" class="text-slate-300 hover:text-white transition-colors text-sm lg:text-base">About</a>
        <a href="#projects" class="text-slate-300 hover:text-white transition-colors text-sm lg:text-base">Projects</a>
        <a href="#skills" class="text-slate-300 hover:text-white transition-colors text-sm lg:text-base">Skills</a>
        <a href="#contact" class="text-slate-300 hover:text-white transition-colors text-sm lg:text-base">Contact</a>
      </div>
      
      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button"
        class="md:hidden text-slate-300 hover:text-white transition-colors p-1.5 sm:p-2"
        aria-label="Toggle mobile menu"
      >
        <Menu id="menu-icon" size={20} class="sm:w-6 sm:h-6" />
        <X id="close-icon" size={20} class="hidden sm:w-6 sm:h-6" />
      </button>
    </div>
    
    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="hidden md:hidden">
      <div class="px-2 pt-2 pb-3 space-y-1 border-t border-slate-800">
        <a href="#about" class="block px-3 py-2.5 text-slate-300 hover:text-white hover:bg-slate-800/50 rounded-md transition-colors mobile-link text-base">About</a>
        <a href="#projects" class="block px-3 py-2.5 text-slate-300 hover:text-white hover:bg-slate-800/50 rounded-md transition-colors mobile-link text-base">Projects</a>
        <a href="#skills" class="block px-3 py-2.5 text-slate-300 hover:text-white hover:bg-slate-800/50 rounded-md transition-colors mobile-link text-base">Skills</a>
        <a href="#contact" class="block px-3 py-2.5 text-slate-300 hover:text-white hover:bg-slate-800/50 rounded-md transition-colors mobile-link text-base">Contact</a>
      </div>
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');
  
  if (mobileMenuButton && mobileMenu && menuIcon && closeIcon) {
    mobileMenuButton.addEventListener('click', () => {
      const isHidden = mobileMenu.classList.contains('hidden');
      
      if (isHidden) {
        mobileMenu.classList.remove('hidden');
        menuIcon.classList.add('hidden');
        closeIcon.classList.remove('hidden');
      } else {
        mobileMenu.classList.add('hidden');
        menuIcon.classList.remove('hidden');
        closeIcon.classList.add('hidden');
      }
    });
    
    // Close mobile menu when clicking on links
    const mobileLinks = document.querySelectorAll('.mobile-link');
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
        menuIcon.classList.remove('hidden');
        closeIcon.classList.add('hidden');
      });
    });
  }
  
  // Smooth scrolling for anchor links
  document.querySelectorAll<HTMLAnchorElement>('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', (e) => {
      e.preventDefault();
      const href = anchor.getAttribute('href');
      if (href) {
        const target = document.querySelector(href);
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      }
    });
  });
  
  // Add active state based on scroll position
  window.addEventListener('scroll', () => {
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('nav a[href^="#"]');
    
    let current = '';
    sections.forEach(section => {
      const htmlSection = section as HTMLElement;
      const sectionTop = htmlSection.offsetTop;
      const sectionHeight = htmlSection.offsetHeight;
      if (window.pageYOffset >= sectionTop - 200) {
        current = section.getAttribute('id') || '';
      }
    });
    
    navLinks.forEach(link => {
      link.classList.remove('text-blue-400');
      link.classList.add('text-slate-300');
      if (link.getAttribute('href') === `#${current}`) {
        link.classList.remove('text-slate-300');
        link.classList.add('text-blue-400');
      }
    });
  });
</script>
